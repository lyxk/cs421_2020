3 shift/reduce conflicts

error:  state 15: shift/reduce conflict (shift LBRACK, reduce by rule 63)
error:  state 31: shift/reduce conflict (shift FUNCTION, reduce by rule 54)
error:  state 35: shift/reduce conflict (shift TYPE, reduce by rule 42)

state 0:

	program : . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 4
	program	goto 146
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 1:

	exp : arr_cre .  (reduce by rule 22)



	.	reduce by rule 22


state 2:

	exp : funcal .  (reduce by rule 18)



	.	reduce by rule 18


state 3:

	exp : lvalue .  (reduce by rule 4)
	exp : lvalue . ASSIGN exp 
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 

	LBRACK	shift 18
	DOT	shift 17
	ASSIGN	shift 16


	.	reduce by rule 4


state 4:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	program : exp .  (reduce by rule 0)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 0


state 5:

	exp : NIL .  (reduce by rule 1)



	.	reduce by rule 1


state 6:

	exp : BREAK .  (reduce by rule 26)



	.	reduce by rule 26


state 7:

	exp : LET . decs IN expseq END 

	FUNCTION	shift 40
	VAR	shift 39
	TYPE	shift 38

	decs	goto 37
	dec	goto 36
	tydec	goto 35
	tydec_list	goto 34
	vardec	goto 33
	fundec_list	goto 32
	fundec	goto 31

	.	reduce by rule 37


state 8:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 41


	.	error


state 9:

	exp : WHILE . exp DO exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 42
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 10:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 43
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 11:

	exp : MINUS . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 44
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 12:

	exp : LPAREN . expseq RPAREN 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 47
	lvalue	goto 3
	expseq	goto 46
	expseq_one	goto 45
	funcal	goto 2
	arr_cre	goto 1

	.	reduce by rule 67


state 13:

	exp : STRING .  (reduce by rule 3)



	.	reduce by rule 3


state 14:

	exp : INT .  (reduce by rule 2)



	.	reduce by rule 2

error:  state 15: shift/reduce conflict (shift LBRACK, reduce by rule 63)

state 15:

	exp : ID . LBRACE RBRACE 
	exp : ID . LBRACE rec_list RBRACE 
	lvalue : ID .  (reduce by rule 63)
	lvalue : ID . LBRACK exp RBRACK 
	funcal : ID . LPAREN RPAREN 
	funcal : ID . LPAREN args RPAREN 
	arr_cre : ID . LBRACK exp RBRACK OF exp 

	LPAREN	shift 50
	LBRACK	shift 49
	LBRACE	shift 48


	.	reduce by rule 63


state 16:

	exp : lvalue ASSIGN . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 51
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 17:

	lvalue : lvalue DOT . ID 

	ID	shift 52


	.	error


state 18:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 53
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 19:

	exp : exp OR . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 54
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 20:

	exp : exp AND . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 55
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 21:

	exp : exp GE . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 56
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 22:

	exp : exp GT . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 57
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 23:

	exp : exp LE . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 58
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 24:

	exp : exp LT . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 59
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 25:

	exp : exp NEQ . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 60
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 26:

	exp : exp EQ . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 61
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 27:

	exp : exp DIVIDE . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 62
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 28:

	exp : exp TIMES . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 63
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 29:

	exp : exp MINUS . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 64
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 30:

	exp : exp PLUS . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 65
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error

error:  state 31: shift/reduce conflict (shift FUNCTION, reduce by rule 54)

state 31:

	fundec_list : fundec .  (reduce by rule 54)
	fundec_list : fundec . fundec_list 

	FUNCTION	shift 40

	fundec_list	goto 66
	fundec	goto 31

	.	reduce by rule 54


state 32:

	dec : fundec_list .  (reduce by rule 41)



	.	reduce by rule 41


state 33:

	dec : vardec .  (reduce by rule 40)



	.	reduce by rule 40


state 34:

	dec : tydec_list .  (reduce by rule 39)



	.	reduce by rule 39

error:  state 35: shift/reduce conflict (shift TYPE, reduce by rule 42)

state 35:

	tydec_list : tydec .  (reduce by rule 42)
	tydec_list : tydec . tydec_list 

	TYPE	shift 38

	tydec	goto 35
	tydec_list	goto 67

	.	reduce by rule 42


state 36:

	decs : dec . decs 

	FUNCTION	shift 40
	VAR	shift 39
	TYPE	shift 38

	decs	goto 68
	dec	goto 36
	tydec	goto 35
	tydec_list	goto 34
	vardec	goto 33
	fundec_list	goto 32
	fundec	goto 31

	.	reduce by rule 37


state 37:

	exp : LET decs . IN expseq END 

	IN	shift 69


	.	error


state 38:

	tydec : TYPE . ID EQ ty 

	ID	shift 70


	.	error


state 39:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON tyid ASSIGN exp 

	ID	shift 71


	.	error


state 40:

	fundec : FUNCTION . ID LPAREN params RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN params RPAREN COLON tyid EQ exp 

	ID	shift 72


	.	error


state 41:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 73


	.	error


state 42:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : WHILE exp . DO exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19
	DO	shift 74


	.	error


state 43:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19
	THEN	shift 75


	.	error


state 44:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : MINUS exp .  (reduce by rule 19)



	.	reduce by rule 19


state 45:

	expseq : expseq_one .  (reduce by rule 68)



	.	reduce by rule 68


state 46:

	exp : LPAREN expseq . RPAREN 

	RPAREN	shift 76


	.	error


state 47:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	expseq_one : exp .  (reduce by rule 69)
	expseq_one : exp . SEMICOLON expseq_one 

	SEMICOLON	shift 77
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 69


state 48:

	exp : ID LBRACE . RBRACE 
	exp : ID LBRACE . rec_list RBRACE 

	ID	shift 80
	RBRACE	shift 79

	rec_list	goto 78

	.	error


state 49:

	lvalue : ID LBRACK . exp RBRACK 
	arr_cre : ID LBRACK . exp RBRACK OF exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 81
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 50:

	funcal : ID LPAREN . RPAREN 
	funcal : ID LPAREN . args RPAREN 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	RPAREN	shift 84
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 83
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1
	args	goto 82

	.	error


state 51:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : lvalue ASSIGN exp .  (reduce by rule 23)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 23


state 52:

	lvalue : lvalue DOT ID .  (reduce by rule 64)



	.	reduce by rule 64


state 53:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	lvalue : lvalue LBRACK exp . RBRACK 

	RBRACK	shift 85
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	error


state 54:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 11)
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20


	.	reduce by rule 11


state 55:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 10)
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21


	.	reduce by rule 10


state 56:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 15)
	exp : exp . LT exp 
	exp : exp . LE exp 

	EOF	reduce by rule 15
	COMMA	reduce by rule 15
	SEMICOLON	reduce by rule 15
	RPAREN	reduce by rule 15
	RBRACK	reduce by rule 15
	RBRACE	reduce by rule 15
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	AND	reduce by rule 15
	OR	reduce by rule 15
	THEN	reduce by rule 15
	ELSE	reduce by rule 15
	TO	reduce by rule 15
	DO	reduce by rule 15
	IN	reduce by rule 15
	END	reduce by rule 15
	FUNCTION	reduce by rule 15
	VAR	reduce by rule 15
	TYPE	reduce by rule 15


	.	error


state 57:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 14)
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 

	EOF	reduce by rule 14
	COMMA	reduce by rule 14
	SEMICOLON	reduce by rule 14
	RPAREN	reduce by rule 14
	RBRACK	reduce by rule 14
	RBRACE	reduce by rule 14
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	AND	reduce by rule 14
	OR	reduce by rule 14
	THEN	reduce by rule 14
	ELSE	reduce by rule 14
	TO	reduce by rule 14
	DO	reduce by rule 14
	IN	reduce by rule 14
	END	reduce by rule 14
	FUNCTION	reduce by rule 14
	VAR	reduce by rule 14
	TYPE	reduce by rule 14


	.	error


state 58:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 17)

	EOF	reduce by rule 17
	COMMA	reduce by rule 17
	SEMICOLON	reduce by rule 17
	RPAREN	reduce by rule 17
	RBRACK	reduce by rule 17
	RBRACE	reduce by rule 17
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	AND	reduce by rule 17
	OR	reduce by rule 17
	THEN	reduce by rule 17
	ELSE	reduce by rule 17
	TO	reduce by rule 17
	DO	reduce by rule 17
	IN	reduce by rule 17
	END	reduce by rule 17
	FUNCTION	reduce by rule 17
	VAR	reduce by rule 17
	TYPE	reduce by rule 17


	.	error


state 59:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 16)
	exp : exp . LE exp 

	EOF	reduce by rule 16
	COMMA	reduce by rule 16
	SEMICOLON	reduce by rule 16
	RPAREN	reduce by rule 16
	RBRACK	reduce by rule 16
	RBRACE	reduce by rule 16
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	AND	reduce by rule 16
	OR	reduce by rule 16
	THEN	reduce by rule 16
	ELSE	reduce by rule 16
	TO	reduce by rule 16
	DO	reduce by rule 16
	IN	reduce by rule 16
	END	reduce by rule 16
	FUNCTION	reduce by rule 16
	VAR	reduce by rule 16
	TYPE	reduce by rule 16


	.	error


state 60:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 13)
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 

	EOF	reduce by rule 13
	COMMA	reduce by rule 13
	SEMICOLON	reduce by rule 13
	RPAREN	reduce by rule 13
	RBRACK	reduce by rule 13
	RBRACE	reduce by rule 13
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	AND	reduce by rule 13
	OR	reduce by rule 13
	THEN	reduce by rule 13
	ELSE	reduce by rule 13
	TO	reduce by rule 13
	DO	reduce by rule 13
	IN	reduce by rule 13
	END	reduce by rule 13
	FUNCTION	reduce by rule 13
	VAR	reduce by rule 13
	TYPE	reduce by rule 13


	.	error


state 61:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 12)
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 

	EOF	reduce by rule 12
	COMMA	reduce by rule 12
	SEMICOLON	reduce by rule 12
	RPAREN	reduce by rule 12
	RBRACK	reduce by rule 12
	RBRACE	reduce by rule 12
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	AND	reduce by rule 12
	OR	reduce by rule 12
	THEN	reduce by rule 12
	ELSE	reduce by rule 12
	TO	reduce by rule 12
	DO	reduce by rule 12
	IN	reduce by rule 12
	END	reduce by rule 12
	FUNCTION	reduce by rule 12
	VAR	reduce by rule 12
	TYPE	reduce by rule 12


	.	error


state 62:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 9)
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 



	.	reduce by rule 9


state 63:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 8)
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 



	.	reduce by rule 8


state 64:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 7)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 

	TIMES	shift 28
	DIVIDE	shift 27


	.	reduce by rule 7


state 65:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 6)
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 

	TIMES	shift 28
	DIVIDE	shift 27


	.	reduce by rule 6


state 66:

	fundec_list : fundec fundec_list .  (reduce by rule 55)



	.	reduce by rule 55


state 67:

	tydec_list : tydec tydec_list .  (reduce by rule 43)



	.	reduce by rule 43


state 68:

	decs : dec decs .  (reduce by rule 38)



	.	reduce by rule 38


state 69:

	exp : LET decs IN . expseq END 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 47
	lvalue	goto 3
	expseq	goto 86
	expseq_one	goto 45
	funcal	goto 2
	arr_cre	goto 1

	.	reduce by rule 67


state 70:

	tydec : TYPE ID . EQ ty 

	EQ	shift 87


	.	error


state 71:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON tyid ASSIGN exp 

	COLON	shift 89
	ASSIGN	shift 88


	.	error


state 72:

	fundec : FUNCTION ID . LPAREN params RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN params RPAREN COLON tyid EQ exp 

	LPAREN	shift 90


	.	error


state 73:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 91
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 74:

	exp : WHILE exp DO . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 92
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 75:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 93
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 76:

	exp : LPAREN expseq RPAREN .  (reduce by rule 5)



	.	reduce by rule 5


state 77:

	expseq_one : exp SEMICOLON . expseq_one 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 47
	lvalue	goto 3
	expseq_one	goto 94
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 78:

	exp : ID LBRACE rec_list . RBRACE 

	RBRACE	shift 95


	.	error


state 79:

	exp : ID LBRACE RBRACE .  (reduce by rule 20)



	.	reduce by rule 20


state 80:

	rec_list : ID . EQ exp 
	rec_list : ID . EQ exp COMMA rec_list 

	EQ	shift 96


	.	error


state 81:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	lvalue : ID LBRACK exp . RBRACK 
	arr_cre : ID LBRACK exp . RBRACK OF exp 

	RBRACK	shift 97
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	error


state 82:

	funcal : ID LPAREN args . RPAREN 

	RPAREN	shift 98


	.	error


state 83:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	args : exp .  (reduce by rule 32)
	args : exp . COMMA args 

	COMMA	shift 99
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 32


state 84:

	funcal : ID LPAREN RPAREN .  (reduce by rule 30)



	.	reduce by rule 30


state 85:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 65)



	.	reduce by rule 65


state 86:

	exp : LET decs IN expseq . END 

	END	shift 100


	.	error


state 87:

	tydec : TYPE ID EQ . ty 

	ID	shift 104
	LBRACE	shift 103
	ARRAY	shift 102

	ty	goto 101

	.	error


state 88:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 105
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 89:

	vardec : VAR ID COLON . tyid ASSIGN exp 

	ID	shift 107

	tyid	goto 106

	.	error


state 90:

	fundec : FUNCTION ID LPAREN . params RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . params RPAREN COLON tyid EQ exp 

	ID	shift 110

	params_one_or_more	goto 109
	params	goto 108

	.	reduce by rule 58


state 91:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19
	TO	shift 111


	.	error


state 92:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : WHILE exp DO exp .  (reduce by rule 24)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 24


state 93:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 29)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19
	ELSE	shift 112


	.	reduce by rule 29


state 94:

	expseq_one : exp SEMICOLON expseq_one .  (reduce by rule 70)



	.	reduce by rule 70


state 95:

	exp : ID LBRACE rec_list RBRACE .  (reduce by rule 21)



	.	reduce by rule 21


state 96:

	rec_list : ID EQ . exp 
	rec_list : ID EQ . exp COMMA rec_list 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 113
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 97:

	lvalue : ID LBRACK exp RBRACK .  (reduce by rule 66)
	arr_cre : ID LBRACK exp RBRACK . OF exp 

	OF	shift 114


	.	reduce by rule 66


state 98:

	funcal : ID LPAREN args RPAREN .  (reduce by rule 31)



	.	reduce by rule 31


state 99:

	args : exp COMMA . args 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 83
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1
	args	goto 115

	.	error


state 100:

	exp : LET decs IN expseq END .  (reduce by rule 27)



	.	reduce by rule 27


state 101:

	tydec : TYPE ID EQ ty .  (reduce by rule 44)



	.	reduce by rule 44


state 102:

	ty : ARRAY . OF ID 

	OF	shift 116


	.	error


state 103:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 119

	tyfields	goto 118
	one_or_more	goto 117

	.	reduce by rule 48


state 104:

	ty : ID .  (reduce by rule 45)



	.	reduce by rule 45


state 105:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 52)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 52


state 106:

	vardec : VAR ID COLON tyid . ASSIGN exp 

	ASSIGN	shift 120


	.	error


state 107:

	tyid : ID .  (reduce by rule 62)



	.	reduce by rule 62


state 108:

	fundec : FUNCTION ID LPAREN params . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN params . RPAREN COLON tyid EQ exp 

	RPAREN	shift 121


	.	error


state 109:

	params : params_one_or_more .  (reduce by rule 59)



	.	reduce by rule 59


state 110:

	params_one_or_more : ID . COLON tyid 
	params_one_or_more : ID . COLON tyid COMMA params_one_or_more 

	COLON	shift 122


	.	error


state 111:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 123
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 112:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 124
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 113:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	rec_list : ID EQ exp .  (reduce by rule 34)
	rec_list : ID EQ exp . COMMA rec_list 

	COMMA	shift 125
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 34


state 114:

	arr_cre : ID LBRACK exp RBRACK OF . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 126
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 115:

	args : exp COMMA args .  (reduce by rule 33)



	.	reduce by rule 33


state 116:

	ty : ARRAY OF . ID 

	ID	shift 127


	.	error


state 117:

	tyfields : one_or_more .  (reduce by rule 49)



	.	reduce by rule 49


state 118:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 128


	.	error


state 119:

	one_or_more : ID . COLON tyid 
	one_or_more : ID . COLON tyid COMMA one_or_more 

	COLON	shift 129


	.	error


state 120:

	vardec : VAR ID COLON tyid ASSIGN . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 130
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 121:

	fundec : FUNCTION ID LPAREN params RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN params RPAREN . COLON tyid EQ exp 

	COLON	shift 132
	EQ	shift 131


	.	error


state 122:

	params_one_or_more : ID COLON . tyid 
	params_one_or_more : ID COLON . tyid COMMA params_one_or_more 

	ID	shift 107

	tyid	goto 133

	.	error


state 123:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19
	DO	shift 134


	.	error


state 124:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : IF exp THEN exp ELSE exp .  (reduce by rule 28)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 28


state 125:

	rec_list : ID EQ exp COMMA . rec_list 

	ID	shift 80

	rec_list	goto 135

	.	error


state 126:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	arr_cre : ID LBRACK exp RBRACK OF exp .  (reduce by rule 36)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 36


state 127:

	ty : ARRAY OF ID .  (reduce by rule 47)



	.	reduce by rule 47


state 128:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 46)



	.	reduce by rule 46


state 129:

	one_or_more : ID COLON . tyid 
	one_or_more : ID COLON . tyid COMMA one_or_more 

	ID	shift 107

	tyid	goto 136

	.	error


state 130:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	vardec : VAR ID COLON tyid ASSIGN exp .  (reduce by rule 53)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 53


state 131:

	fundec : FUNCTION ID LPAREN params RPAREN EQ . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 137
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 132:

	fundec : FUNCTION ID LPAREN params RPAREN COLON . tyid EQ exp 

	ID	shift 107

	tyid	goto 138

	.	error


state 133:

	params_one_or_more : ID COLON tyid .  (reduce by rule 60)
	params_one_or_more : ID COLON tyid . COMMA params_one_or_more 

	COMMA	shift 139


	.	reduce by rule 60


state 134:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 140
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 135:

	rec_list : ID EQ exp COMMA rec_list .  (reduce by rule 35)



	.	reduce by rule 35


state 136:

	one_or_more : ID COLON tyid .  (reduce by rule 50)
	one_or_more : ID COLON tyid . COMMA one_or_more 

	COMMA	shift 141


	.	reduce by rule 50


state 137:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	fundec : FUNCTION ID LPAREN params RPAREN EQ exp .  (reduce by rule 56)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 56


state 138:

	fundec : FUNCTION ID LPAREN params RPAREN COLON tyid . EQ exp 

	EQ	shift 142


	.	error


state 139:

	params_one_or_more : ID COLON tyid COMMA . params_one_or_more 

	ID	shift 110

	params_one_or_more	goto 143

	.	error


state 140:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 25)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 25


state 141:

	one_or_more : ID COLON tyid COMMA . one_or_more 

	ID	shift 119

	one_or_more	goto 144

	.	error


state 142:

	fundec : FUNCTION ID LPAREN params RPAREN COLON tyid EQ . exp 

	ID	shift 15
	INT	shift 14
	STRING	shift 13
	LPAREN	shift 12
	MINUS	shift 11
	IF	shift 10
	WHILE	shift 9
	FOR	shift 8
	LET	shift 7
	BREAK	shift 6
	NIL	shift 5

	exp	goto 145
	lvalue	goto 3
	funcal	goto 2
	arr_cre	goto 1

	.	error


state 143:

	params_one_or_more : ID COLON tyid COMMA params_one_or_more .  (reduce by rule 61)



	.	reduce by rule 61


state 144:

	one_or_more : ID COLON tyid COMMA one_or_more .  (reduce by rule 51)



	.	reduce by rule 51


state 145:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	fundec : FUNCTION ID LPAREN params RPAREN COLON tyid EQ exp .  (reduce by rule 57)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 57


state 146:


	EOF	accept


	.	error

487 of 1003 action table entries left after compaction
183 goto table entries
