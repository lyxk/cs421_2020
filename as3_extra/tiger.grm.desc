1 shift/reduce conflict

error:  state 16: shift/reduce conflict (shift LBRACK, reduce by rule 21)

state 0:

	program : . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 5
	program	goto 143
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 1:

	exp : arrval .  (reduce by rule 65)



	.	reduce by rule 65


state 2:

	exp : recval .  (reduce by rule 64)



	.	reduce by rule 64


state 3:

	exp : funcal .  (reduce by rule 63)



	.	reduce by rule 63


state 4:

	exp : lvalue .  (reduce by rule 56)
	exp : lvalue . ASSIGN exp 
	lvalue : lvalue . LBRACK exp RBRACK 
	lvalue : lvalue . DOT ID 

	LBRACK	shift 19
	DOT	shift 18
	ASSIGN	shift 17


	.	reduce by rule 56


state 5:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 
	program : exp .  (reduce by rule 0)

	SEMICOLON	shift 32
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 0


state 6:

	exp : NIL .  (reduce by rule 39)



	.	reduce by rule 39


state 7:

	exp : BREAK .  (reduce by rule 62)



	.	reduce by rule 62


state 8:

	exp : LET . optionaldecs IN optionalexp END 

	FUNCTION	shift 42
	VAR	shift 41
	TYPE	shift 40

	empty	goto 39
	optionaldecs	goto 38
	decs	goto 37
	dec	goto 36
	tydec	goto 35
	vardec	goto 34
	fundec	goto 33

	.	reduce by rule 1


state 9:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 43


	.	error


state 10:

	exp : WHILE . exp DO exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 44
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 11:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 45
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 12:

	exp : MINUS . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 46
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 13:

	exp : LPAREN . RPAREN 
	exp : LPAREN . exp RPAREN 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	RPAREN	shift 48
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 47
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 14:

	exp : STRING .  (reduce by rule 42)



	.	reduce by rule 42


state 15:

	exp : INT .  (reduce by rule 41)



	.	reduce by rule 41

error:  state 16: shift/reduce conflict (shift LBRACK, reduce by rule 21)

state 16:

	lvalue : ID .  (reduce by rule 21)
	lvalue : ID . LBRACK exp RBRACK 
	funcal : ID . LPAREN explist RPAREN 
	recval : ID . LBRACE keylist RBRACE 
	recval : ID . NIL 
	arrval : ID . LBRACK exp RBRACK OF exp 

	LPAREN	shift 52
	LBRACK	shift 51
	LBRACE	shift 50
	NIL	shift 49


	.	reduce by rule 21


state 17:

	exp : lvalue ASSIGN . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 53
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 18:

	lvalue : lvalue DOT . ID 

	ID	shift 54


	.	error


state 19:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 55
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 20:

	exp : exp OR . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 56
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 21:

	exp : exp AND . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 57
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 22:

	exp : exp GE . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 58
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 23:

	exp : exp GT . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 59
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 24:

	exp : exp LE . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 60
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 25:

	exp : exp LT . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 61
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 26:

	exp : exp NEQ . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 62
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 27:

	exp : exp EQ . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 63
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 28:

	exp : exp DIVIDE . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 64
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 29:

	exp : exp TIMES . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 65
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 30:

	exp : exp MINUS . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 66
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 31:

	exp : exp PLUS . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 67
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 32:

	exp : exp SEMICOLON . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 68
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 33:

	dec : fundec .  (reduce by rule 8)



	.	reduce by rule 8


state 34:

	dec : vardec .  (reduce by rule 7)



	.	reduce by rule 7


state 35:

	dec : tydec .  (reduce by rule 6)



	.	reduce by rule 6


state 36:

	decs : dec .  (reduce by rule 4)
	decs : dec . decs 

	FUNCTION	shift 42
	VAR	shift 41
	TYPE	shift 40

	decs	goto 69
	dec	goto 36
	tydec	goto 35
	vardec	goto 34
	fundec	goto 33

	.	reduce by rule 4


state 37:

	optionaldecs : decs .  (reduce by rule 3)



	.	reduce by rule 3


state 38:

	exp : LET optionaldecs . IN optionalexp END 

	IN	shift 70


	.	error


state 39:

	optionaldecs : empty .  (reduce by rule 2)



	.	reduce by rule 2


state 40:

	tydec : TYPE . ID EQ ty 

	ID	shift 71


	.	error


state 41:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 72


	.	error


state 42:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 73


	.	error


state 43:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 74


	.	error


state 44:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : WHILE exp . DO exp 
	exp : exp . SEMICOLON exp 

	SEMICOLON	shift 32
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	DO	shift 75


	.	error


state 45:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	exp : exp . SEMICOLON exp 

	SEMICOLON	shift 32
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	THEN	shift 76


	.	error


state 46:

	exp : MINUS exp .  (reduce by rule 43)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 



	.	reduce by rule 43


state 47:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : LPAREN exp . RPAREN 
	exp : exp . SEMICOLON exp 

	SEMICOLON	shift 32
	RPAREN	shift 77
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	error


state 48:

	exp : LPAREN RPAREN .  (reduce by rule 40)



	.	reduce by rule 40


state 49:

	recval : ID NIL .  (reduce by rule 31)



	.	reduce by rule 31


state 50:

	recval : ID LBRACE . keylist RBRACE 

	ID	shift 81

	empty	goto 80
	keylist	goto 79
	keylist_not_empty	goto 78

	.	reduce by rule 1


state 51:

	lvalue : ID LBRACK . exp RBRACK 
	arrval : ID LBRACK . exp RBRACK OF exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 82
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 52:

	funcal : ID LPAREN . explist RPAREN 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 86
	empty	goto 85
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1
	explist	goto 84
	explist_not_empty	goto 83

	.	reduce by rule 1


state 53:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : lvalue ASSIGN exp .  (reduce by rule 57)
	exp : exp . SEMICOLON exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 57


state 54:

	lvalue : lvalue DOT ID .  (reduce by rule 24)



	.	reduce by rule 24


state 55:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 
	lvalue : lvalue LBRACK exp . RBRACK 

	SEMICOLON	shift 32
	RBRACK	shift 87
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	error


state 56:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 55)
	exp : exp . SEMICOLON exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22


	.	reduce by rule 55


state 57:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 54)
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22


	.	reduce by rule 54


state 58:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 51)
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 

	EOF	reduce by rule 51
	COMMA	reduce by rule 51
	SEMICOLON	reduce by rule 51
	RPAREN	reduce by rule 51
	RBRACK	reduce by rule 51
	RBRACE	reduce by rule 51
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 51
	OR	reduce by rule 51
	THEN	reduce by rule 51
	ELSE	reduce by rule 51
	TO	reduce by rule 51
	DO	reduce by rule 51
	IN	reduce by rule 51
	END	reduce by rule 51
	FUNCTION	reduce by rule 51
	VAR	reduce by rule 51
	TYPE	reduce by rule 51


	.	error


state 59:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 50)
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 

	EOF	reduce by rule 50
	COMMA	reduce by rule 50
	SEMICOLON	reduce by rule 50
	RPAREN	reduce by rule 50
	RBRACK	reduce by rule 50
	RBRACE	reduce by rule 50
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 50
	OR	reduce by rule 50
	THEN	reduce by rule 50
	ELSE	reduce by rule 50
	TO	reduce by rule 50
	DO	reduce by rule 50
	IN	reduce by rule 50
	END	reduce by rule 50
	FUNCTION	reduce by rule 50
	VAR	reduce by rule 50
	TYPE	reduce by rule 50


	.	error


state 60:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 53)
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 

	EOF	reduce by rule 53
	COMMA	reduce by rule 53
	SEMICOLON	reduce by rule 53
	RPAREN	reduce by rule 53
	RBRACK	reduce by rule 53
	RBRACE	reduce by rule 53
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 53
	OR	reduce by rule 53
	THEN	reduce by rule 53
	ELSE	reduce by rule 53
	TO	reduce by rule 53
	DO	reduce by rule 53
	IN	reduce by rule 53
	END	reduce by rule 53
	FUNCTION	reduce by rule 53
	VAR	reduce by rule 53
	TYPE	reduce by rule 53


	.	error


state 61:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 52)
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 

	EOF	reduce by rule 52
	COMMA	reduce by rule 52
	SEMICOLON	reduce by rule 52
	RPAREN	reduce by rule 52
	RBRACK	reduce by rule 52
	RBRACE	reduce by rule 52
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 52
	OR	reduce by rule 52
	THEN	reduce by rule 52
	ELSE	reduce by rule 52
	TO	reduce by rule 52
	DO	reduce by rule 52
	IN	reduce by rule 52
	END	reduce by rule 52
	FUNCTION	reduce by rule 52
	VAR	reduce by rule 52
	TYPE	reduce by rule 52


	.	error


state 62:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 49)
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 

	EOF	reduce by rule 49
	COMMA	reduce by rule 49
	SEMICOLON	reduce by rule 49
	RPAREN	reduce by rule 49
	RBRACK	reduce by rule 49
	RBRACE	reduce by rule 49
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 49
	OR	reduce by rule 49
	THEN	reduce by rule 49
	ELSE	reduce by rule 49
	TO	reduce by rule 49
	DO	reduce by rule 49
	IN	reduce by rule 49
	END	reduce by rule 49
	FUNCTION	reduce by rule 49
	VAR	reduce by rule 49
	TYPE	reduce by rule 49


	.	error


state 63:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 48)
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 

	EOF	reduce by rule 48
	COMMA	reduce by rule 48
	SEMICOLON	reduce by rule 48
	RPAREN	reduce by rule 48
	RBRACK	reduce by rule 48
	RBRACE	reduce by rule 48
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 48
	OR	reduce by rule 48
	THEN	reduce by rule 48
	ELSE	reduce by rule 48
	TO	reduce by rule 48
	DO	reduce by rule 48
	IN	reduce by rule 48
	END	reduce by rule 48
	FUNCTION	reduce by rule 48
	VAR	reduce by rule 48
	TYPE	reduce by rule 48


	.	error


state 64:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 47)
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 



	.	reduce by rule 47


state 65:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 46)
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 



	.	reduce by rule 46


state 66:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 45)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 

	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 45


state 67:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 44)
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 

	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 44


state 68:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 
	exp : exp SEMICOLON exp .  (reduce by rule 68)

	SEMICOLON	shift 32
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 68


state 69:

	decs : dec decs .  (reduce by rule 5)



	.	reduce by rule 5


state 70:

	exp : LET optionaldecs IN . optionalexp END 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 90
	empty	goto 89
	optionalexp	goto 88
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	reduce by rule 1


state 71:

	tydec : TYPE ID . EQ ty 

	EQ	shift 91


	.	error


state 72:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 93
	ASSIGN	shift 92


	.	error


state 73:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 94


	.	error


state 74:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 95
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 75:

	exp : WHILE exp DO . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 96
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 76:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 97
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 77:

	exp : LPAREN exp RPAREN .  (reduce by rule 67)



	.	reduce by rule 67


state 78:

	keylist : keylist_not_empty .  (reduce by rule 33)



	.	reduce by rule 33


state 79:

	recval : ID LBRACE keylist . RBRACE 

	RBRACE	shift 98


	.	error


state 80:

	keylist : empty .  (reduce by rule 32)



	.	reduce by rule 32


state 81:

	keylist_not_empty : ID . EQ exp 
	keylist_not_empty : ID . EQ exp COMMA keylist_not_empty 

	EQ	shift 99


	.	error


state 82:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 
	lvalue : ID LBRACK exp . RBRACK 
	arrval : ID LBRACK exp . RBRACK OF exp 

	SEMICOLON	shift 32
	RBRACK	shift 100
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	error


state 83:

	explist : explist_not_empty .  (reduce by rule 27)



	.	reduce by rule 27


state 84:

	funcal : ID LPAREN explist . RPAREN 

	RPAREN	shift 101


	.	error


state 85:

	explist : empty .  (reduce by rule 26)



	.	reduce by rule 26


state 86:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 
	explist_not_empty : exp .  (reduce by rule 28)
	explist_not_empty : exp . COMMA explist_not_empty 

	COMMA	shift 102
	SEMICOLON	shift 32
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 28


state 87:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 23)



	.	reduce by rule 23


state 88:

	exp : LET optionaldecs IN optionalexp . END 

	END	shift 103


	.	error


state 89:

	optionalexp : empty .  (reduce by rule 37)



	.	reduce by rule 37


state 90:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 
	optionalexp : exp .  (reduce by rule 38)

	SEMICOLON	shift 32
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 38


state 91:

	tydec : TYPE ID EQ . ty 

	ID	shift 107
	LBRACE	shift 106
	ARRAY	shift 105

	ty	goto 104

	.	error


state 92:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 108
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 93:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 109


	.	error


state 94:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 113

	empty	goto 112
	tyfields	goto 111
	tyfields_not_empty	goto 110

	.	reduce by rule 1


state 95:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : FOR ID ASSIGN exp . TO exp DO exp 
	exp : exp . SEMICOLON exp 

	SEMICOLON	shift 32
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	TO	shift 114


	.	error


state 96:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : WHILE exp DO exp .  (reduce by rule 60)
	exp : exp . SEMICOLON exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 60


state 97:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 59)
	exp : exp . SEMICOLON exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	ELSE	shift 115


	.	reduce by rule 59


state 98:

	recval : ID LBRACE keylist RBRACE .  (reduce by rule 30)



	.	reduce by rule 30


state 99:

	keylist_not_empty : ID EQ . exp 
	keylist_not_empty : ID EQ . exp COMMA keylist_not_empty 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 116
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 100:

	lvalue : ID LBRACK exp RBRACK .  (reduce by rule 22)
	arrval : ID LBRACK exp RBRACK . OF exp 

	OF	shift 117


	.	reduce by rule 22


state 101:

	funcal : ID LPAREN explist RPAREN .  (reduce by rule 25)



	.	reduce by rule 25


state 102:

	explist_not_empty : exp COMMA . explist_not_empty 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 86
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1
	explist_not_empty	goto 118

	.	error


state 103:

	exp : LET optionaldecs IN optionalexp END .  (reduce by rule 66)



	.	reduce by rule 66


state 104:

	tydec : TYPE ID EQ ty .  (reduce by rule 9)



	.	reduce by rule 9


state 105:

	ty : ARRAY . OF ID 

	OF	shift 119


	.	error


state 106:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 113

	empty	goto 112
	tyfields	goto 120
	tyfields_not_empty	goto 110

	.	reduce by rule 1


state 107:

	ty : ID .  (reduce by rule 10)



	.	reduce by rule 10


state 108:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 17)

	SEMICOLON	shift 32
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 17


state 109:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 121


	.	error


state 110:

	tyfields : tyfields_not_empty .  (reduce by rule 14)



	.	reduce by rule 14


state 111:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 122


	.	error


state 112:

	tyfields : empty .  (reduce by rule 13)



	.	reduce by rule 13


state 113:

	tyfields_not_empty : ID . COLON ID 
	tyfields_not_empty : ID . COLON ID COMMA tyfields_not_empty 

	COLON	shift 123


	.	error


state 114:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 124
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 115:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 125
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 116:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 
	keylist_not_empty : ID EQ exp .  (reduce by rule 34)
	keylist_not_empty : ID EQ exp . COMMA keylist_not_empty 

	COMMA	shift 126
	SEMICOLON	shift 32
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 34


state 117:

	arrval : ID LBRACK exp RBRACK OF . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 127
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 118:

	explist_not_empty : exp COMMA explist_not_empty .  (reduce by rule 29)



	.	reduce by rule 29


state 119:

	ty : ARRAY OF . ID 

	ID	shift 128


	.	error


state 120:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 129


	.	error


state 121:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 130
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 122:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 132
	EQ	shift 131


	.	error


state 123:

	tyfields_not_empty : ID COLON . ID 
	tyfields_not_empty : ID COLON . ID COMMA tyfields_not_empty 

	ID	shift 133


	.	error


state 124:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : FOR ID ASSIGN exp TO exp . DO exp 
	exp : exp . SEMICOLON exp 

	SEMICOLON	shift 32
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	DO	shift 134


	.	error


state 125:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : IF exp THEN exp ELSE exp .  (reduce by rule 58)
	exp : exp . SEMICOLON exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 58


state 126:

	keylist_not_empty : ID EQ exp COMMA . keylist_not_empty 

	ID	shift 81

	keylist_not_empty	goto 135

	.	error


state 127:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 
	arrval : ID LBRACK exp RBRACK OF exp .  (reduce by rule 36)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 36


state 128:

	ty : ARRAY OF ID .  (reduce by rule 12)



	.	reduce by rule 12


state 129:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 11)



	.	reduce by rule 11


state 130:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 18)

	SEMICOLON	shift 32
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 18


state 131:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 136
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 132:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 137


	.	error


state 133:

	tyfields_not_empty : ID COLON ID .  (reduce by rule 15)
	tyfields_not_empty : ID COLON ID . COMMA tyfields_not_empty 

	COMMA	shift 138


	.	reduce by rule 15


state 134:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 139
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 135:

	keylist_not_empty : ID EQ exp COMMA keylist_not_empty .  (reduce by rule 35)



	.	reduce by rule 35


state 136:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 19)

	SEMICOLON	shift 32
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 19


state 137:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 140


	.	error


state 138:

	tyfields_not_empty : ID COLON ID COMMA . tyfields_not_empty 

	ID	shift 113

	tyfields_not_empty	goto 141

	.	error


state 139:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 61)
	exp : exp . SEMICOLON exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 61


state 140:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 142
	lvalue	goto 4
	funcal	goto 3
	recval	goto 2
	arrval	goto 1

	.	error


state 141:

	tyfields_not_empty : ID COLON ID COMMA tyfields_not_empty .  (reduce by rule 16)



	.	reduce by rule 16


state 142:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 20)

	SEMICOLON	shift 32
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 20


state 143:


	EOF	accept


	.	error

524 of 1032 action table entries left after compaction
211 goto table entries
